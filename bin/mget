#!/usr/bin/env node
// -*- mode: js -*-
// vim: set expandtab sw=4:
// Copyright (c) 2012, Joyent, Inc. All rights reserved.

var fs = require('fs');
var path = require('path');
var url = require('url');

var bunyan = require('bunyan');
var dashdash = require('dashdash');
var restify = require('restify');
var uuid = require('node-uuid');

var manta = require('../lib');



///--- Globals

var LOG = bunyan.createLogger({
        name: path.basename(process.argv[1]),
        level: (process.env.LOG_LEVEL || 'info'),
        stream: process.stderr,
        serializers: restify.bunyan.serializers
});

var OPTIONS_PARSER = dashdash.createParser({
    options: manta.DEFAULT_CLI_OPTIONS.concat([
        {
            names: ['quiet', 'q'],
            type: 'bool',
            help: 'disable the progress bar'
        }
    ])
});



///--- Functions

function ifError(err) {
        if (err) {
                console.error(err.toString());
                process.exit(1);
        }
}


function parseOptions() {
    var opts;

    try {
        opts = OPTIONS_PARSER.parse(process.argv);
        manta.checkBinEnv(opts);
    } catch (e) {
        manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
    }

    manta.cli_logger(opts, LOG);

    if (opts.help)
        manta.cli_usage(OPTIONS_PARSER, false, 'path...');

    if (opts._args.length < 1)
        manta.cli_usage(OPTIONS_PARSER, 'path required', 'path...');

    opts.paths = opts._args;

    return (opts);
}


function printEntry(obj) {
        console.log('%j', obj);
}



///--- Mainline
// Leading _ to avoid scope conflicts in functions

(function main() {
        var opts = parseOptions();
        var client = manta.createBinClient(opts);
        var i = -1;
        var out = process.stdout;
        var drawProgressBar = true;

        function get() {
                var p = opts.paths[++i];
                if (!p) {
                        client.close();
                        return;
                }

                client.get(p, function (err, stream, res) {
                        ifError(err);

                        var bar;
                        if (drawProgressBar) {
                                var baropts = {
                                        filename: p
                                };
                                var clen =
                                        parseInt(res.headers['content-length'],
                                                 10);
                                if (clen >= 0) {
                                        baropts.size = clen;
                                } else {
                                        baropts.nosize = true;
                                }
                                bar = new manta.ProgressBar(baropts);
                        }

                        stream.on('data', function (data) {
                                if (bar)
                                        bar.advance(data.length);
                                out.write(data);
                        });
                        stream.on('end', function () {
                                if (bar)
                                        bar.end();
                                get();
                        });
                });
        }

        if (opts.quiet || !Boolean(process.stderr.isTTY))
                drawProgressBar = false;

        if (opts.file) {
                out = fs.createWriteStream(opts.file);
                out.on('open', get.bind(this));
        } else {
                if (out.isTTY) {
                        /*
                         * If we're outputting to a TTY, then we don't
                         * want to draw the progress bar as it will likely
                         * clobber the output.
                         */
                        drawProgressBar = false;
                }
                get();
        }
})();
